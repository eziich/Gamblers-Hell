@page "/satan"
@using GamblersHell.Client.StateProviders
@using GamblersHell.Shared
@using GamblersHell.Client.Services
@using GamblersHell.Client.Pages.Components
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Authorization
@inject UserService UserService
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@attribute [Authorize]

<PageTitle>Satan @GamblersHellConstants.DeafultPageName</PageTitle>

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="css/ScrollsHighRank.css">
</head>

<style>
    body {
        background-image: linear-gradient(180deg, #000000 0%, #1a0000 25%, #3d0000 50%, #610000 75%, #8b0000 85%, #000000 100%);
        background-attachment: fixed;
        background-size: 100% 100%;
        animation: backgroundPulse 8s infinite alternate;
    }

    @@keyframes backgroundPulse {
        0% {
            background-size: 100% 100%;
        }

        50% {
            background-size: 105% 105%;
        }

        100% {
            background-size: 100% 100%;
        }
    }

    .satan-container {
        animation: glow 3s infinite alternate;
        position: relative;
    }

        .satan-container::before {
            content: "";
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: radial-gradient(ellipse at center, rgba(255, 0, 0, 0.1) 0%, rgba(0, 0, 0, 0) 70%);
            pointer-events: none;
            z-index: -1;
            animation: flameAura 4s infinite alternate;
        }

    @@keyframes flameAura {
        0% {
            transform: scale(1);
            opacity: 0.5;
        }

        100% {
            transform: scale(1.1);
            opacity: 0.8;
        }
    }

    .title-text {
        font-family: 'Cinzel', serif;
        text-shadow: 0 0 10px rgba(255, 0, 0, 0.8), 0 0 20px rgba(255, 0, 0, 0.5), 0 0 30px rgba(255, 0, 0, 0.3);
        letter-spacing: 3px;
        animation: textBurn 4s infinite alternate;
    }

    @@keyframes textBurn {
        0% {
            text-shadow: 0 0 10px rgba(255, 0, 0, 0.8), 0 0 20px rgba(255, 0, 0, 0.5);
        }

        50% {
            text-shadow: 0 0 15px rgba(255, 0, 0, 1), 0 0 25px rgba(255, 0, 0, 0.7), 0 0 35px rgba(255, 0, 0, 0.5);
        }

        100% {
            text-shadow: 0 0 10px rgba(255, 0, 0, 0.8), 0 0 20px rgba(255, 0, 0, 0.5);
        }
    }

    .scroll-container {
        perspective: 1000px;
    }

    .scroll {
        background-image: radial-gradient(circle, #4d0000, #3d0000, #2a0000, #1a0000, #000000);
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 0 15px rgba(255, 0, 0, 0.5), 0 0 30px rgba(255, 0, 0, 0.3), inset 0 0 15px rgba(255, 0, 0, 0.3);
        padding: 2rem;
        border: 2px solid #ff3333;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        position: relative;
    }

        .scroll::before {
            content: "";
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: linear-gradient(135deg, rgba(255, 0, 0, 0.15) 0%, rgba(0, 0, 0, 0) 50%, rgba(255, 0, 0, 0.15) 100%), url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100' height='100' viewBox='0 0 100 100'%3E%3Cpath fill='%23ff0000' fill-opacity='0.05' d='M11 18c3.866 0 7-3.134 7-7s-3.134-7-7-7-7 3.134-7 7 3.134 7 7 7zm48 25c3.866 0 7-3.134 7-7s-3.134-7-7-7-7 3.134-7 7 3.134 7 7 7zm-43-7c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zm63 31c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zM34 90c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zm56-76c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zM12 86c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm28-65c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm23-11c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm-6 60c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm29 22c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zM32 63c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm57-13c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm-9-21c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2zM60 91c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2zM35 41c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2zM12 60c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2z'/%3E%3C/svg%3E");
            opacity: 0.3;
            pointer-events: none;
            z-index: 0;
        }

        .scroll:hover {
            box-shadow: 0 0 25px rgba(255, 0, 0, 0.8), 0 0 40px rgba(255, 0, 0, 0.5), inset 0 0 20px rgba(255, 0, 0, 0.4);
            transform: translateY(-5px) scale(1.02);
        }

    .scroll-text {
        color: #ff9999;
        text-shadow: 0 0 5px rgba(255, 0, 0, 0.5);
        position: relative;
        z-index: 1;
    }

    .satan-image {
        filter: contrast(1.4) saturate(1.4) brightness(1.1);
        transition: all 0.5s ease;
        border-radius: 4px;
        animation: float 6s ease-in-out infinite, glowing 4s infinite alternate;
        box-shadow: 0 0 20px rgba(255, 0, 0, 0.7);
    }

    @@keyframes glowing {
        0% {
            filter: contrast(1.4) saturate(1.4) brightness(1.1);
        }

        100% {
            filter: contrast(1.5) saturate(1.6) brightness(1.2);
        }
    }

    @@keyframes glow {
        0% {
            filter: drop-shadow(0 0 5px rgba(255, 0, 0, 0.8));
        }

        100% {
            filter: drop-shadow(0 0 20px rgba(255, 0, 0, 1));
        }
    }

    @@keyframes float {
        0% {
            transform: translateY(0px) rotate(0deg);
        }

        50% {
            transform: translateY(-20px) rotate(1deg);
        }

        100% {
            transform: translateY(0px) rotate(0deg);
        }
    }

    .warning-text {
        background-color: rgba(80, 0, 0, 0.7);
        border-radius: 4px;
        padding: 1.5rem;
        border: 1px solid #ff3333;
        box-shadow: 0 0 15px rgba(255, 0, 0, 0.7), inset 0 0 10px rgba(255, 0, 0, 0.3);
        position: relative;
        animation: pulse 3s infinite;
    }

    @@keyframes pulse {
        0% {
            box-shadow: 0 0 15px rgba(255, 0, 0, 0.7), inset 0 0 10px rgba(255, 0, 0, 0.3);
        }

        50% {
            box-shadow: 0 0 25px rgba(255, 0, 0, 0.9), inset 0 0 15px rgba(255, 0, 0, 0.5);
        }

        100% {
            box-shadow: 0 0 15px rgba(255, 0, 0, 0.7), inset 0 0 10px rgba(255, 0, 0, 0.3);
        }
    }

    .warning-text::before {
        content: "";
        position: absolute;
        top: -5px;
        left: -5px;
        right: -5px;
        bottom: -5px;
        border: 2px solid #ff3333;
        border-radius: 7px;
        animation: borderPulse 4s infinite;
        opacity: 0.7;
        pointer-events: none;
    }

    @@keyframes borderPulse {
        0% {
            transform: scale(1);
            opacity: 0.7;
        }

        50% {
            transform: scale(1.05);
            opacity: 0.9;
        }

        100% {
            transform: scale(1);
            opacity: 0.7;
        }
    }

    /* Special styling for Satan title */
    .scroll-text h3 {
        font-weight: 700;
        letter-spacing: 5px;
        text-transform: uppercase;
        background: linear-gradient(to bottom, #ffffff, #ff9999);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        animation: titleFlicker 5s infinite;
        margin-bottom: 1rem;
        position: relative;
        display: inline-block;
    }

    @@keyframes titleFlicker {
        0%, 19%, 21%, 23%, 25%, 54%, 56%, 100% {
            text-shadow: 0 0 5px #fff, 0 0 10px #fff, 0 0 15px #ff0000, 0 0 20px #ff0000, 0 0 25px #ff0000;
            -webkit-text-fill-color: #fff;
        }

        20%, 24%, 55% {
            text-shadow: none;
            -webkit-text-fill-color: #ff3333;
        }
    }

    /* Add fiery ember particles */
    .scroll::after {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-image: radial-gradient(circle at 20% 30%, rgba(255, 100, 0, 0.1) 0%, rgba(0, 0, 0, 0) 20%), radial-gradient(circle at 80% 70%, rgba(255, 50, 0, 0.1) 0%, rgba(0, 0, 0, 0) 20%), radial-gradient(circle at 40% 80%, rgba(255, 150, 0, 0.1) 0%, rgba(0, 0, 0, 0) 20%), radial-gradient(circle at 60% 20%, rgba(255, 0, 0, 0.1) 0%, rgba(0, 0, 0, 0) 20%);
        pointer-events: none;
        z-index: 0;
        animation: fireEmbers 8s infinite alternate;
    }

    @@keyframes fireEmbers {
        0% {
            opacity: 0.3;
        }

        50% {
            opacity: 0.7;
        }

        100% {
            opacity: 0.3;
        }
    }

    /* Glitch image container with full image reveal */
    .glitch-image-container {
        position: relative;
        width: 350px;
        height: 350px;
        overflow: hidden;
    }

    /* Style for the primary image */
    .primary-image {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: 1;
    }

    /* Style for the secondary image that appears during glitch */
    .secondary-image {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        opacity: 0;
        z-index: 0;
    }

    /* Updated glitch animation that shows full image */
    @@keyframes glitchEffect {
        0%, 100% {
            opacity: 1;
            filter: none;
        }

        3% {
            filter: hue-rotate(-20deg) saturate(1.8);
        }

        6% {
            filter: none;
        }

        9% {
            filter: hue-rotate(20deg) saturate(2);
        }

        15% {
            opacity: 1;
        }

        15.1% {
            opacity: 0;
        }

        15.5% {
            opacity: 0;
        }

        15.6% {
            opacity: 0;
        }

        15.7% {
            opacity: 0;
        }

        16% {
            opacity: 0;
        }

        16.5% {
            opacity: 0;
        }

        17% {
            opacity: 0;
        }

        18% {
            opacity: 1;
        }

        85% {
            opacity: 1;
        }
    }

    /* Secondary image animation - reduced from 8s to 2s */
    @@keyframes secondaryGlitch {
        0%, 15%, 85%, 100% {
            opacity: 0;
        }

        15.1%, 18% {
            opacity: 1;
            filter: hue-rotate(15deg) contrast(1.3);
        }

        18.1%, 84.9% {
            opacity: 0;
        }
    }

    /* Apply animations to images with updated timing */
    .primary-image {
        animation: glitchEffect 2s infinite;
    }

    .secondary-image {
        animation: secondaryGlitch 2s infinite;
    }

    /* Updated overlay with better glitch effect */
    .glitch-overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: repeating-linear-gradient( to bottom, rgba(255, 0, 0, 0) 0%, rgba(255, 0, 0, 0) 99%, rgba(255, 0, 0, 0.2) 99.5%, rgba(255, 0, 0, 0) 100% );
        background-size: 100% 3px;
        z-index: 3;
        pointer-events: none;
        animation: scanlines 0.2s linear infinite;
        opacity: 0;
        mix-blend-mode: overlay;
    }

    .glitch-image-container:hover .glitch-overlay {
        opacity: 0.4;
    }

    /* Add occasional horizontal shift for more dynamic effect */
    @@keyframes horizontalShift {
        0%, 100% {
            transform: translateX(0);
        }

        15.1%, 15.4% {
            transform: translateX(-10px);
        }

        15.5%, 15.9% {
            transform: translateX(8px);
        }

        16%, 16.4% {
            transform: translateX(-5px);
        }

        16.5%, 17% {
            transform: translateX(0);
        }
    }

    /* Apply horizontal shift to both images */
    .primary-image, .secondary-image {
        animation-name: glitchEffect, horizontalShift;
        animation-duration: 3s, 3s;
        animation-timing-function: linear, linear;
        animation-iteration-count: infinite, infinite;
    }

    .secondary-image {
        animation-name: secondaryGlitch, horizontalShift;
    }

    /* Improved RGB shift effect */
    .glitch-image-container::after {
        content: "";
        position: absolute;
        animation: rgbShift 4s infinite;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: linear-gradient( 45deg, rgba(255, 0, 0, 0.2) 0%, rgba(0, 255, 0, 0.2) 50%, rgba(0, 0, 255, 0.2) 100% );
        mix-blend-mode: color;
        opacity: 0;
        z-index: 4;
        pointer-events: none;
        animation: rgbShift 8s infinite;
    }

    @@keyframes rgbShift {
        0%, 100% {
            opacity: 0;
        }

        15%, 15.8% {
            opacity: 0.4;
            transform: translateX(-2px);
        }

        16%, 16.9% {
            opacity: 0;
        }

        17%, 17.9% {
            opacity: 0.4;
            transform: translateX(2px);
        }

        18% {
            opacity: 0;
        }
    }


    /* Add scanlines animation */
    @@keyframes scanlines {
        0% {
            background-position: 0 0;
        }

        100% {
            background-position: 0 3px;
        }
    }
</style>


@if (_pageLoading)
{
    <LoadingPageComponent />
}
else
{
    @if (UserModel.Level < 9)
    {
        <AnticheatSite />
    }
    else
    {
        @if (_accountVerified == 0)
        {
            <VerificationNotificationComponent />
            <UserNotVerifiedHellInteraction />
        }
        else
        {
        <MudItem Class="d-flex flex-column min-vh-100 align-items-center align-content-center justify-content-center my-1">
            <MudContainer Class="scroll-container">
                <MudContainer Class="scroll">
                    <MudContainer Class="scroll-text d-flex flex-column justify-content-center align-items-center">
                        <div class="glitch-image-container">
                            <MudImage Class="primary-image" Src="Demons/Treachery1.png" Width="350" Height="350"></MudImage>
                            <MudImage Class="secondary-image" Src="Demons/Treachery4.png" Width="350" Height="350"></MudImage>
                            <div class="glitch-overlay"></div>
                        </div>
                        <MudText Typo="Typo.h3">SATAN</MudText>
                        <MudText Align="Align.Center" Typo="Typo.h5" Class="my-4">
                            <i>
                                <span>
                                    "The King"
                                </span>
                            </i>
                        </MudText>
                        <MudText Class="my-2" Typo="Typo.body1" Align="Align.Center" Style="color:#ff9999">
                            <i>
                                <span>
                                    Satan is both a master of manipulation and the embodiment of betrayal itself.
                                    His fall from grace — his rebellion against God — was the greatest treachery ever known, and he now sits upon a throne made of smoldering bones and rivers of blood, awaiting those who dare enter his realm.
                                    His presence is overpowering, filling the very air with a sense of suffocating dread. There is no hope here, only manipulation, betrayal, and punishment.
                                    To fail Satan in this circle means the ultimate punishment: the consumption of your soul.
                                </span>
                            </i>
                        </MudText>
                        <MudText Class="my-2" Typo="Typo.body1" Align="Align.Center" Style="color:#ff9999">
                            <i>
                                <span>
                                    Surrounding Satan are his most loyal followers—the Fallen Sentinels—souls of those who once served him, now twisted into horrible, grotesque forms.
                                    These souls of traitors, forever bound to Satan's will, serve as silent witnesses to the horrific game that unfolds in his domain.
                                    Their eyes are hollow, their expressions frozen in a mixture of despair and admiration for their dark master.
                                    They honor him not through love, but through terror — Satan is their God, their tormentor, and their keeper.
                                </span>
                            </i>
                        </MudText>
                        <MudText Class="my-2 warning-text" Typo="Typo.body1" Align="Align.Center" Style="color:#ff9999">
                            <b>
                                <span>
                                    Satan's special ability is called <i>'Soultake'</i>. If you lose to Satan, the king will take your soul and you will lose everything.
                                </span>
                            </b>
                        </MudText>
                    </MudContainer>
                </MudContainer>
            </MudContainer>

            <MudItem Class="d-flex justify-content-center align-items-center mt-auto w-100">
                <PageFooter />
            </MudItem>
        </MudItem>
        }
    }
}

@code {
    private int _id { get; set; }
    private int _accountVerified { get; set; }
    private bool _userWonFinalgame => UserModel.BalanceAfterWin > 0;
    public bool _pageLoading = true;

    private UserDTO UserModel { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            _id = Convert.ToInt32(user.FindFirst(u => u.Type == nameof(UserDTO.ID)).Value);
            _accountVerified = Convert.ToInt32(user.FindFirst(u => u.Type == "UserVerified")?.Value ?? "0");
            try
            {
                UserModel = await UserService.GetUserByID(_id);
            }
            catch
            {
                throw;
            }
            finally
            {
                _pageLoading = false;
            }
        }
        else
        {
            _id = 0;
        }
    }
}