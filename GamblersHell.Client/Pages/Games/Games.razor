@page "/games"
@using GamblersHell.Client.Pages.Components
@using GamblersHell.Shared
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Authorization
@using GamblersHell.Client.Services
@inject IDialogService DialogService
@inject UserService UserService
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthenticationStateProvider
@attribute [Authorize]

<PageTitle>Games @GamblersHellConstants.DeafultPageName</PageTitle>

<head>
    <link rel="stylesheet" href="css/DemonFloat.css" />
    <link href="https://fonts.googleapis.com/css2?family=Cinzel:wght@400;700&display=swap" rel="stylesheet">
</head>

<style>
    body {
        background: radial-gradient(circle at center, #3d0000 0%, #2a0000 30%, #1a0000 60%, #000000 100%);
        background-attachment: fixed;
        background-size: cover;
    }

    .transparentPaper {
        background-color: transparent !important;
    }

    .title-text {
        font-family: 'Cinzel', serif;
        text-shadow: 0 0 10px rgba(255, 0, 0, 0.8);
        letter-spacing: 3px;
        text-transform: uppercase;
        color: #ff9999 !important;
    }

    .pulse-glow {
        animation: pulseglow 2s infinite alternate;
    }

    .game-button {
        background-color: #3d0000 !important;
        color: #ff9999 !important;
        font-weight: bold;
        transition: transform 0.2s, background-color 0.2s;
        border: 2px solid #ff5555 !important;
        border-radius: 4px;
        text-transform: uppercase;
        letter-spacing: 1.5px;
        font-family: 'Cinzel', serif;
    }

        .game-button:hover:not(.mud-disabled-text) {
            background-color: #5d0000 !important;
            transform: scale(1.05);
            box-shadow: 0 0 10px rgba(255, 0, 0, 0.8);
        }

    .game-divider {
        background: linear-gradient(90deg, transparent, #ff0000, transparent) !important;
        height: 3px !important;
        margin: 10px 0;
        box-shadow: 0 0 10px rgba(255, 0, 0, 0.8);
    }



    .game-card-text {
        font-family: 'Cinzel', serif;
        color: #ff9999 !important;
        text-shadow: 0 0 5px rgba(255, 0, 0, 0.5);
    }

    .gameCardBlack {
        transition: transform 0.3s ease-in-out;
        filter: drop-shadow(0 0 8px rgba(0, 0, 0, 0.7));
        border-radius: 8px;
    }

        .gameCardBlack:hover {
            transform: scale(1.05);
            filter: drop-shadow(0 0 15px rgba(0, 0, 0, 0.9));
        }

    .gameCardGray {
        transition: transform 0.3s ease-in-out;
        filter: drop-shadow(0 0 8px rgba(128, 128, 128, 0.7));
        border-radius: 8px;
    }

        .gameCardGray:hover {
            transform: scale(1.05);
            filter: drop-shadow(0 0 15px rgba(128, 128, 128, 0.9));
        }

    .gameCardPurple {
        transition: transform 0.3s ease-in-out;
        filter: drop-shadow(0 0 8px rgba(255, 0, 255, 0.4));
        border-radius: 8px;
    }

        .gameCardPurple:hover {
            transform: scale(1.05);
            filter: drop-shadow(0 0 15px rgba(255, 0, 255, 0.6));
        }

    .gameCardBlue {
        transition: transform 0.3s ease-in-out;
        filter: drop-shadow(0 0 8px rgba(0, 0, 255, 0.7));
        border-radius: 8px;
    }

        .gameCardBlue:hover {
            transform: scale(1.05);
            filter: drop-shadow(0 0 15px rgba(0, 0, 255, 0.9));
        }

    .gameCardBrown {
        transition: transform 0.3s ease-in-out;
        filter: drop-shadow(0 0 8px rgba(150, 40, 0, 0.7));
        border-radius: 8px;
    }

        .gameCardBrown:hover {
            transform: scale(1.05);
            filter: drop-shadow(0 0 15px rgba(150, 40, 0, 0.9));
        }

    .gameCardRed {
        transition: transform 0.3s ease-in-out;
        filter: drop-shadow(0 0 8px rgba(255, 0, 0, 0.7));
        border-radius: 8px;
    }

        .gameCardRed:hover {
            transform: scale(1.05);
            filter: drop-shadow(0 0 15px rgba(255, 0, 0, 0.9));
        }


    .demon-float {
        animation: float 6s ease-in-out infinite;
        filter: drop-shadow(0 0 15px rgba(255, 0, 0, 0.6));
    }
</style>


@if (_pageLoading)
{
    <LoadingPageComponent />
}
else
{
    @if (_accountVerified == 0)
    {
        <VerificationNotificationComponent />
        <UserNotVerifiedHellInteraction />
    }
    else
    {
        <MudContainer Class="d-flex flex-column justify-content-center align-items-center transparentPaper">
            <MudPaper Elevation="0" Class="d-flex flex-column justify-content-center align-items-center mb-5 transparentPaper">
                <MudText Class="title-text pulse-glow" Typo="Typo.h3">Circles of Hell</MudText>
            </MudPaper>

            <MudDivider Class="game-divider mb-6" />

            <MudGrid>
                <MudItem xs="12" sm="6" md="4">
                    <MudCard Elevation="25" Class="gameCardGray mx-2 mb-6">
                        <MudImage ObjectFit="ObjectFit.Contain" Src="DemonsBackground/LimboBackground.jpg" />
                        <MudCardContent Style="background-color:#1a0000; color:#ff9999">
                            <MudText Class="d-flex justify-content-center align-content-center game-card-text" Typo="Typo.h4">Limbo</MudText>
                        </MudCardContent>
                        <MudCardActions Style="background-color:#1a0000" Class="d-flex justify-content-center align-content-center">
                            <MudButton Size="Size.Large" Class="game-button" OnClick="@(() => NavigateTo("/limbo"))">Play</MudButton>
                        </MudCardActions>
                    </MudCard>
                </MudItem>

                <MudItem xs="12" sm="6" md="4">
                    <MudCard Elevation="25" Class="gameCardRed mx-2 mb-6">
                        @if (UserModel.Level < 2)
                        {
                            <MudImage ObjectFit="ObjectFit.Contain" Src="DemonsBackground/LustBackgroundLocked.jpg" />
                        }
                        else
                        {
                            <MudImage ObjectFit="ObjectFit.Contain" Src="DemonsBackground/LustBackground.jpg" />
                        }
                        <MudCardContent Style="background-color:#1a0000; color:#ff9999">
                            <MudText Class="d-flex justify-content-center align-content-center game-card-text" Typo="Typo.h4">Lust</MudText>
                        </MudCardContent>
                        <MudCardActions Style="background-color:#1a0000" Class="d-flex justify-content-center align-content-center">
                            <MudButton Size="Size.Large" Class="game-button" Disabled="UserModel.Level < 2" OnClick="@(() => NavigateTo("/lust"))">Play</MudButton>
                        </MudCardActions>
                    </MudCard>
                </MudItem>

                <MudItem xs="12" sm="6" md="4">
                    <MudCard Elevation="25" Class="gameCardPurple mx-2 mb-6">
                        @if (UserModel.Level < 3)
                        {
                            <MudImage ObjectFit="ObjectFit.Contain" Src="DemonsBackground/GluttonyBackgroundLocked.jpg" />
                        }
                        else
                        {
                            <MudImage ObjectFit="ObjectFit.Contain" Src="DemonsBackground/GluttonyBackground.jpg" />
                        }
                        <MudCardContent Style="background-color:#1a0000; color:#ff9999">
                            <MudText Class="d-flex justify-content-center align-content-center game-card-text" Typo="Typo.h4">Gluttony</MudText>
                        </MudCardContent>
                        <MudCardActions Style="background-color:#1a0000" Class="d-flex justify-content-center align-content-center">
                            <MudButton Size="Size.Large" Class="game-button" Disabled="UserModel.Level < 3" OnClick="@(() => NavigateTo("/gluttony"))">Play</MudButton>
                        </MudCardActions>
                    </MudCard>
                </MudItem>

                <MudItem xs="12" sm="6" md="4">
                    <MudCard Elevation="25" Class="gameCardBlue mx-2 mb-6">
                        @if (UserModel.Level < 4)
                        {
                            <MudImage ObjectFit="ObjectFit.Contain" Src="DemonsBackground/GreedBackgroundLocked.jpg" />
                        }
                        else
                        {
                            <MudImage ObjectFit="ObjectFit.Contain" Src="DemonsBackground/GreedBackground.jpg" />
                        }
                        <MudCardContent Style="background-color:#1a0000; color:#ff9999">
                            <MudText Class="d-flex justify-content-center align-content-center game-card-text" Typo="Typo.h4">Greed</MudText>
                        </MudCardContent>
                        <MudCardActions Style="background-color:#1a0000" Class="d-flex justify-content-center align-content-center">
                            <MudButton Size="Size.Large" Class="game-button" Disabled="UserModel.Level < 4" OnClick="@(() => NavigateTo("/greed"))">Play</MudButton>
                        </MudCardActions>
                    </MudCard>
                </MudItem>

                <MudItem xs="12" sm="6" md="4">
                    <MudCard Elevation="25" Class="gameCardBrown mx-2 mb-6">
                        @if (UserModel.Level < 5)
                        {
                            <MudImage ObjectFit="ObjectFit.Contain" Src="DemonsBackground/WrathBackgroundLocked.jpg" />
                        }
                        else
                        {
                            <MudImage ObjectFit="ObjectFit.Contain" Src="DemonsBackground/WrathBackground.jpg" />
                        }
                        <MudCardContent Style="background-color:#1a0000; color:#ff9999">
                            <MudText Class="d-flex justify-content-center align-content-center game-card-text" Typo="Typo.h4">Wrath</MudText>
                        </MudCardContent>
                        <MudCardActions Style="background-color:#1a0000" Class="d-flex justify-content-center align-content-center">
                            <MudButton Size="Size.Large" Class="game-button" Disabled="UserModel.Level < 5" OnClick="@(() => NavigateTo("/wrath"))">Play</MudButton>
                        </MudCardActions>
                    </MudCard>
                </MudItem>

                <MudItem xs="12" sm="6" md="4">
                    <MudCard Elevation="25" Class="gameCardBlack mx-2 mb-6">
                        @if (UserModel.Level < 6)
                        {
                            <MudImage ObjectFit="ObjectFit.Contain" Src="DemonsBackground/HerseyBackgroundLocked.jpg" />
                        }
                        else
                        {
                            <MudImage ObjectFit="ObjectFit.Contain" Src="DemonsBackground/HerseyBackground.jpg" />
                        }
                        <MudCardContent Style="background-color:#1a0000; color:#ff9999">
                            <MudText Class="d-flex justify-content-center align-content-center game-card-text" Typo="Typo.h4">Hersey</MudText>
                        </MudCardContent>
                        <MudCardActions Style="background-color:#1a0000" Class="d-flex justify-content-center align-content-center">
                            <MudButton Size="Size.Large" Class="game-button" Disabled="UserModel.Level < 6" OnClick="@(() => NavigateTo("/hersey"))">Play</MudButton>
                        </MudCardActions>
                    </MudCard>
                </MudItem>

                <MudItem xs="12" sm="6" md="4">
                    <MudCard Elevation="25" Class="gameCardRed mx-2 mb-6">
                        @if (UserModel.Level < 7)
                        {
                            <MudImage ObjectFit="ObjectFit.Contain" Src="DemonsBackground/ViolenceBackgroundLocked.jpg" />
                        }
                        else
                        {
                            <MudImage ObjectFit="ObjectFit.Contain" Src="DemonsBackground/ViolenceBackground.jpg" />
                        }
                        <MudCardContent Style="background-color:#1a0000; color:#ff9999">
                            <MudText Class="d-flex justify-content-center align-content-center game-card-text" Typo="Typo.h4">Violence</MudText>
                        </MudCardContent>
                        <MudCardActions Style="background-color:#1a0000" Class="d-flex justify-content-center align-content-center">
                            <MudButton Size="Size.Large" Class="game-button" Disabled="UserModel.Level < 7" OnClick="@(() => NavigateTo("/violence"))">Play</MudButton>
                        </MudCardActions>
                    </MudCard>
                </MudItem>

                <MudItem xs="12" sm="6" md="4">
                    <MudCard Elevation="25" Class="gameCardRed mx-2 mb-6">
                        @if (UserModel.Level < 8)
                        {
                            <MudImage ObjectFit="ObjectFit.Contain" Src="DemonsBackground/FraudBackgroundLocked.jpg" />
                        }
                        else
                        {
                            <MudImage ObjectFit="ObjectFit.Contain" Src="DemonsBackground/FraudBackground.jpg" />
                        }
                        <MudCardContent Style="background-color:#1a0000; color:#ff9999">
                            <MudText Class="d-flex justify-content-center align-content-center game-card-text" Typo="Typo.h4">Fraud</MudText>
                        </MudCardContent>
                        <MudCardActions Style="background-color:#1a0000" Class="d-flex justify-content-center align-content-center">
                            <MudButton Size="Size.Large" Class="game-button" Disabled="UserModel.Level < 8" OnClick="@(() => NavigateTo("/fraud"))">Play</MudButton>
                        </MudCardActions>
                    </MudCard>
                </MudItem>

                <MudItem xs="12" sm="6" md="4">
                    <MudCard Elevation="25" Class="gameCardRed mx-2 mb-6">
                        <MudImage ObjectFit="ObjectFit.Contain" Src="DemonsBackground/TreacheryBackground.jpg" />
                        <MudCardContent Style="background-color:#1a0000; color:#ff9999">
                            <MudText Class="d-flex justify-content-center align-content-center game-card-text" Typo="Typo.h4">Treachery</MudText>
                        </MudCardContent>
                        <MudCardActions Style="background-color:#1a0000" Class="d-flex justify-content-center align-content-center">
                            <MudButton Class="game-button" Disabled="UserModel.Level != 9" @onclick="SatanFinalLevel"> @(UserModel.Level > 9 ? "You already won Gambler's Hell" : "Face the king")</MudButton>
                        </MudCardActions>
                    </MudCard>
                </MudItem>
            </MudGrid>
        </MudContainer>

        <PageFooter />
    }
}


@code {
    private int _id { get; set; }
    private int _accountVerified { get; set; }
    private bool _pageLoading = true;

    private UserDTO UserModel { get; set; } = new();

    public async Task NavigateTo(string targetUrl)
    {
        Navigation.NavigateTo(targetUrl);
    }

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            _id = Convert.ToInt32(user.FindFirst(u => u.Type == nameof(UserDTO.ID)).Value);
            _accountVerified = Convert.ToInt32(user.FindFirst(u => u.Type == "UserVerified")?.Value ?? "0");
            try
            {
                UserModel = await UserService.GetUserByID(_id);
                _pageLoading = false;
            }
            catch
            {
                throw;
            }
        }
        else
        {
            _id = 0;
        }
    }

    private Task SatanFinalLevel()
    {
        var options = new DialogOptions { CloseOnEscapeKey = false, BackdropClick = false };
        return DialogService.ShowAsync<SatanThroneDialog>("Simple Dialog", options);
    }
}

